name: Yakit-CI

on:
  push:
    branches:
      - "ci/*"
    tags:
      - "v*"

jobs:
  build_yakit:
    #    strategy:
    #      matrix:
    #        os:
    #          - windows-latest
    #          - macos-latest
    #          - ubuntu-latest
    runs-on: macos-10.15.7
    if: ${{ startsWith(github.ref, 'refs/heads/ci/yakit-') || startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.5.0
      - run: echo ${{ github.ref }}
      - uses: mad9000/actions-find-and-replace-string@1
        id: fetchtag_yakit
        with:
          source: ${{ github.ref }}
          find: 'refs/tags/v'
          replace: ''
      - run: yarn install && yarn install-render && yarn build-render
        working-directory: ./
        name: "Install Dependencies"
        env:
          CI: ""
          NODE_OPTIONS: --max_old_space_size=4096
      - name: Build Yakit (MultiPlatform)
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        working-directory: ./
        run: |
          yarn add -D dmg-license && yarn electron-publish
      - name: View Published Content
        run: ls ./release
        #        Yakit-1.0.9-darwin-arm64.dmg
        #        Yakit-1.0.9-darwin-arm64.dmg.blockmap
        #        Yakit-1.0.9-darwin-x64.dmg
        #        Yakit-1.0.9-darwin-x64.dmg.blockmap
        #        Yakit-1.0.9-linux-amd64.AppImage
        #        Yakit-1.0.9-windows-amd64.exe
        #        Yakit-1.0.9-windows-amd64.exe.blockmap
        #        builder-debug.yml
        #        latest-linux.yml
        #        latest-mac.yml
        #        latest.yml
        #        linux-unpacked
        #        mac
        #        mac-arm64
        #        win-unpacked
      - name: Upload Yakit Artifacts Windows
        uses: actions/upload-artifact@v2
        with:
          # Yakit-1.0.3-beta24-win32-x64.exe
          name: Yakit-${{ steps.fetchtag_yakit.outputs.value }}-windows-amd64.exe
          path: ./release/Yakit-${{ steps.fetchtag_yakit.outputs.value }}-windows-amd64.exe
      - name: Upload Yakit Artifacts Mac(m1)
        uses: actions/upload-artifact@v2
        with:
          # Yakit-1.0.3-beta24-win32-x64.exe
          name: Yakit-${{ steps.fetchtag_yakit.outputs.value }}-darwin-arm64.dmg
          path: ./release/Yakit-${{ steps.fetchtag_yakit.outputs.value }}-darwin-arm64.dmg
      - name: Upload Yakit Artifacts Mac(intel)
        uses: actions/upload-artifact@v2
        with:
          # Yakit-1.0.3-beta24-win32-x64.exe
          name: Yakit-${{ steps.fetchtag_yakit.outputs.value }}-darwin-x64.dmg
          path: ./release/Yakit-${{ steps.fetchtag_yakit.outputs.value }}-darwin-x64.dmg
      - name: Upload Yakit Artifacts Linux
        uses: actions/upload-artifact@v2
        with:
          # Yakit-1.0.3-beta24-win32-x64.exe
          name: Yakit-${{ steps.fetchtag_yakit.outputs.value }}-linux-amd64.AppImage
          path: ./release/Yakit-${{ steps.fetchtag_yakit.outputs.value }}-linux-amd64.AppImage
      - name: Upload Yakit latest.yml
        uses: actions/upload-artifact@v2
        with:
          # Yakit-1.0.3-beta24-win32-x64.exe
          name: latest.yml
          path: ./release/latest.yml
      - name: Upload Yakit latest-mac.yml
        uses: actions/upload-artifact@v2
        with:
          # Yakit-1.0.3-beta24-win32-x64.exe
          name: latest-mac.yml
          path: ./release/latest-mac.yml
      - name: Upload Yakit latest-linux.yml
        uses: actions/upload-artifact@v2
        with:
          # Yakit-1.0.3-beta24-win32-x64.exe
          name: latest-linux.yml
          path: ./release/latest-linux.yml

  download_artifacts_and_release:
    if: ${{ startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/ci/') }}
    needs:
      #      - build_and_release
      - build_yakit
    runs-on: ubuntu-latest
    steps:
      - name: Set Yak Version by Tag
        uses: mad9000/actions-find-and-replace-string@1
        id: fetchtag_release
        with:
          source: ${{ github.ref }}
          find: 'refs/tags/v'
          replace: ''
      - name: Download Yakit (Darwin Amd64)
        uses: actions/download-artifact@v2
        with:
          name: Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-x64.dmg
      - name: Download Yakit (Windows amd64)
        uses: actions/download-artifact@v2
        with:
          name: Yakit-${{ steps.fetchtag_release.outputs.value }}-windows-amd64.exe
      - name: Download Yakit (Darwin arm64)
        uses: actions/download-artifact@v2
        with:
          name: Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-arm64.dmg
      - name: Download Yakit (Linux amd64)
        uses: actions/download-artifact@v2
        with:
          name: Yakit-${{ steps.fetchtag_release.outputs.value }}-linux-amd64.AppImage
#      - name: Download latest.yml
#        uses: actions/download-artifact@v2
#        with:
#          name: latest.yml
#      - name: Download latest.yml (mac)
#        uses: actions/download-artifact@v2
#        with:
#          name: latest-mac.yml
#      - name: Download latest.yml (linux)
#        uses: actions/download-artifact@v2
#        with:
#          name: latest-linux.yml

      - run: ls
        name: Ls Published Artifacts...

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # 上传 release asset
      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./Yakit-${{ steps.fetchtag_release.outputs.value }}-windows-amd64.exe
          asset_name: Yakit-${{ steps.fetchtag_release.outputs.value }}-windows-amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (MacOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-x64.dmg
          asset_name: Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-x64.dmg
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (MacOS-M1)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-arm64.dmg
          asset_name: Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-arm64.dmg
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./Yakit-${{ steps.fetchtag_release.outputs.value }}-linux-amd64.AppImage
          asset_name: Yakit-${{ steps.fetchtag_release.outputs.value }}-linux-amd64.AppImage
          asset_content_type: application/octet-stream

      - name: Run
        run: ls
      #      - name: Upload yak to oss Latest
      #        uses: tvrcgo/upload-to-oss@master
      #        with:
      #          key-id: ${{ secrets.OSS_KEY_ID }}
      #          key-secret: ${{ secrets.OSS_KEY_SECRET }}
      #          region: oss-accelerate
      #          bucket: yaklang
      #          assets: |
      #            yak_windows_amd64.exe:/yak/latest/yak_windows_amd64.exe
      #            yak_windows_amd64.exe:/yak/${{ steps.fetchtag_release.outputs.value }}/yak_windows_amd64.exe
      #            yak_linux_amd64:/yak/latest/yak_linux_amd64
      #            yak_linux_amd64:/yak/${{ steps.fetchtag_release.outputs.value }}/yak_linux_amd64
      #            yak_darwin_amd64:/yak/latest/yak_darwin_amd64
      #            yak_darwin_amd64:/yak/${{ steps.fetchtag_release.outputs.value }}/yak_darwin_amd64
      #      - name: Upload Yakit to oss(MacOS m1)
      #        uses: tvrcgo/upload-to-oss@master
      #        with:
      #          key-id: ${{ secrets.OSS_KEY_ID }}
      #          key-secret: ${{ secrets.OSS_KEY_SECRET }}
      #          region: oss-accelerate
      #          bucket: yaklang
      #          assets: |
      #            Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-arm64.dmg:/yak/${{ steps.fetchtag_release.outputs.value }}/Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-arm64.dmg
      #            Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-arm64.dmg:/yak/latest/Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-arm64.dmg
      - name: Update OSS latest file
        run: echo ${{ steps.fetchtag_release.outputs.value }} > ./yakit-version.txt
      - name: Upload Yakit to oss(windows)
        uses: tvrcgo/upload-to-oss@master
        with:
          key-id: ${{ secrets.OSS_KEY_ID }}
          key-secret: ${{ secrets.OSS_KEY_SECRET }}
          region: oss-accelerate
          bucket: yaklang
          assets: |
            ./yakit-version.txt:/yak/latest/yakit-version.txt
            Yakit-${{ steps.fetchtag_release.outputs.value }}-windows-amd64.exe:/yak/${{ steps.fetchtag_release.outputs.value }}/Yakit-${{ steps.fetchtag_release.outputs.value }}-windows-amd64.exe
            Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-x64.dmg:/yak/${{ steps.fetchtag_release.outputs.value }}/Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-x64.dmg
            Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-arm64.dmg:/yak/${{ steps.fetchtag_release.outputs.value }}/Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-arm64.dmg
            Yakit-${{ steps.fetchtag_release.outputs.value }}-linux-amd64.AppImage:/yak/${{ steps.fetchtag_release.outputs.value }}/Yakit-${{ steps.fetchtag_release.outputs.value }}-linux-amd64.AppImage
